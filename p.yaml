---
apiVersion: v1
kind: Namespace
metadata:
  name: blog
---
apiVersion: storage.k8s.io/v1
kind: StorageClass
metadata:
  name: fast-storageclass
provisioner: pd.csi.storage.gke.io
volumeBindingMode: WaitForFirstConsumer
reclaimPolicy: Retain
allowVolumeExpansion: true
parameters:
  type: pd-balanced
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: personal-blog-db
  labels:
    name: personal-blog-db
  namespace: blog
spec:
  replicas: 1
  selector:
    matchLabels:
      name: personal-blog-db
  serviceName: personal-blog-db
  template:
    metadata:
      labels:
        name: personal-blog-db
    spec:
      topologySpreadConstraints:
      - maxSkew: 1
        topologyKey: "topology.kubernetes.io/zone"
        whenUnsatisfiable: DoNotSchedule
        labelSelector:
          matchLabels:
            name: personal-blog-db
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: name
                operator: In
                values:
                - personal-blog-db
            topologyKey: "kubernetes.io/hostname"
      containers:
      - name: personal-blog-db
        image: postgres
        env:
        - name: POSTGRESS_DB
          value: micro_blog_development
        - name: POSTGRES_PASSWORD
          value: shark
        - name: POSTGRES_USER
          value: sammy
        ports:
        - name: postgres
          containerPort: 5432
        resources:
          limits:
            cpu: 200m
            memory: 200Mi
          requests:
            cpu: 100m
            memory: 100Mi
        volumeMounts:
          - mountPath: /var/lib/postgresql/data
            name: personal-blog-postgres-data-storage
            subPath: data
  volumeClaimTemplates:
  - metadata:
      name: personal-blog-postgres-data-storage
      labels:
        name: personal-blog-postgres-data-storage
    spec:
      storageClassName: fast-storageclass
      volumeMode: Filesystem
      accessModes:
      - ReadWriteOnce
      resources:
        requests:
          storage: 4Gi
---
apiVersion: v1
kind: Service
metadata:
  name: personal-blog-db-service
  labels:
    name: personal-blog-db-service
  namespace: blog
spec:
  type: NodePort
  ports:
    # the port that this service should serve on
  - port: 5432
    targetPort: 5432
    nodePort: 30432
    name: "postgres"
    protocol: TCP
  selector:
    name: personal-blog-db
# ---
# apiVersion: v1
# kind: Secret
# metadata:
#   name: mykey
# data:
#   .dockercfg: ewoJImF1dGhzIjogewoJCSJnY3IuaW8iOiB7CgkJCSJhdXRoIjogIlgycHpiMjVmYTJWNU9uc0tJQ0FpZEhsd1pTSTZJQ0p6WlhKMmFXTmxYMkZqWTI5MWJuUWlMQW9nSUNKd2NtOXFaV04wWDJsa0lqb2dJbUZzZEhOamFHOXZiQzB5TXlJc0NpQWdJbkJ5YVhaaGRHVmZhMlY1WDJsa0lqb2dJamhpT0RJM05HRTFZVFl3TTJVNU4yUXdaVGcyTURReU1qTTNPVGN5TW1KaE1UUXhNakZrTm1RaUxBb2dJQ0p3Y21sMllYUmxYMnRsZVNJNklDSXRMUzB0TFVKRlIwbE9JRkJTU1ZaQlZFVWdTMFZaTFMwdExTMWNiazFKU1VWMlVVbENRVVJCVGtKbmEzRm9hMmxIT1hjd1FrRlJSVVpCUVZORFFrdGpkMmRuVTJwQlowVkJRVzlKUWtGUlExVlplSEV5WTFKR05VRTFkekZjYmxoTVkxQnFkalp4YjBOWFVIZzFjR1E1Y2tOV2FHZFpNRXBYVFZWQ1VDdDNSMlJyU2pScWQyMU1PVTFNT1ZkSGRHRkZWelZCTVhWUFpsTnZObnBEYzJwY2JtVllSRUZVUXpkbmVVZFNNRmxDYlRaSVVsRkljbWczV0V0TVV6RnRPSFYwZFdGdUwyWkZVWHBUY1UxamRtcDVVWFZpYTFVeU5FUldOV1pEWTI1NGJGTmNiazB3ZGtKaVRUZGtValJvT1hGUU0zbG1SMHh0VW0xVGJXOXVPVUUxUzNWb01WSkxibE0ySzI0eFVHWnNTMHR4YlZGek1sSktUbEpQUnk5VGN5OVZlQzljYmtGcVlqUnJkazQzTTFGMFJVVnhTa3RQWm0xUlZHMVVlVmR1ZFhwSlNrRk1USFJGY1d4dWVWbHpVWGRKYVhkaGFYZDBka1JPWmxwSGRuWTBkSGxNTjJsY2JrVlljbVZSYTJrNVZUbG9UMFpaUmxoUFNVUnBNbEo1UVhWQ2FVUnpWbkp5TVU1UVJYVkJRMkpyT0hFdk9Fd3hRVzh4WlU1UVNrOVNSVU40T0c5VlVFRmNiakowT1VsMFdtRlFRV2ROUWtGQlJVTm5aMFZCUW1rdlZtOXpjVE5HUld0aGRqZDZWVmw1UlhWeVFsZFBVekUzYVhGRk1VeFZiMmx4YUVrd1ZXZDJZWE5jYmxwSU4waGFiSEZaT0VkNWNFTTBVVnBLVURWSFptVTNUMW92VUM5RFZVZFFRVTlWYXpGMFpUSlZjV1kwVkVWUVptWnlkVTF3VERsV1UwNXdTa2x3VGxOY2JqTkVWREJEYUU0ek1HNHlibkpIUTJkTVRtRmFhVmN5V0dkNFQxcDNlVmc1UXpocVdYWlZSbGx3VEVKQ1YwSXZkVXR4YVZkQ1VYcHNWVWM1VWtJdlkxRmNibXBGYmxWQlRtSTJTMWQ0Y2pGUVlYZzBkVFJUZVVRclJVVm9SUzh5YjFGc1pUWjRSR0UyV1dvclRUUXdWMDl1UlV0blYxbHZkSEk0Ymk5VVRHMURTMlZjYmtVMVRtOVpRVlV5YTJ0UlRVWkZWRTFHTVhjdmFITXpZbmh3SzBobmIyRlFVVGdyTVd0Nk5IVmtWRlJLTjFkeWNuZzJWVTFNTUROb2QwbHFOM1ZUUWpkY2JuRlNNbWx3TVU0MlMyNTFTWGxCTTFaeGQzbHFWR3RNWms5T1pYRkxTSFJHWkd4UmFsRTFiRFJLVVV0Q1oxRkVUbXRFUW5kUGMwcENLMGszTmpaWU5YRmNialo2WjNwNmMzSmtaVmhtWlVKTGVWTjJiV1pYT1d3M05HZ3piR05NZGpKVmIyVTBSRXhuUmpGWFJWSjBZV1U0UjJoR1NtbERlWFJOTWtkdlZ5OUZSekpjYmxWa1V6Sm9lak5KYkZwTU5tMTRhV0pYYzI1NGRtYzBiMnMxVm0xVmRFbHFiSEJTZUhob1RWSktkVFEwTHpsSmVFUjFSRWxzV0hSTVkzYzBhMmR2VGsxY2JrNXhNblpMU2xwaFVtVnlZV1kzYTBVME9WQmphVUU1ZW5kM1MwSm5VVU0wZVRWUGJWWTVWakJzU0dsaFNqSnZWMWQ1WjB4dGVFZFFiMGRHYTBKTFZHSmNibFI1ZGpCMmNqUmpWQzlQTW5GUVZIQlZOa0pGUjJod2EzY3hSR2s1YXpaNlluZFVjRmREVGxJMWRXdzBNV2N5V2poSU5sUklPVkJIUWpJelpFUXZlblpjYmxjeFpURkZZM2g0UzI5U2EzZEtWVmM1ZW5KU1UzWlRRMEV5VFZNdlIwZEJhalkwTkhWR1dVSkJTRTgyS3pjemVETndia1J4YlVnMVlsQnZOVmxoUTJkY2JtaGtaVmx5VXk5b1VsRkxRbWRIYmxKNFV6SjRRV1JzUjBwQmVVVmpTVU5JZWl0dVZHeFdhMGh6TmpSSFFpOVRUM05vVUZaNGFsQTBVVmxCZWpkSVVUaGNia2MzVG14V2JtcGhNVWhpYVhCd2NHSlBZa2RvUVVWNFVuZ3JUa2hRYldsc2JsaFFUa1ZSUVZkQ05VTmphMDFHUVhKc05sVnpUMDEzWm1sTmNteFhUMlZjYm0wMVNYRklhSGxvVW5SaWRUQnVlRkZ3VjFJNGJIWnFWRXBNSzJ0MFFWSnBlbGQzZVRNMWRHWkVURkZ2VG1NeVVHNXlkVlJEZVd4VVFXOUhRV1JIU1hGY2JscEliM1pCYkZFM2RrbExWVk4xTkhkUk1XSjJZMWhEUm5oa1RYazNUR2h3U3paUmVEUlhlblJTYURSVk1sSnhSVGxxT0cxWWF6SjNiRXhEYUd0c2NXRmNibFZyWm1wUWMweGhVMlpOZERjNFZFdFJkV2x3YmtzcmVraHhXR2xITDBkQlVrcGhiMFp4UnpkaWFWUnZRVTlZUjBWdGFFNXZPVUl3VW14SVZFdHVMMVJjYmt4MkwxSnJjVWg0VVZaTmNFcHljVmRTZFdZMEsyNXJURUZ5WVdONmJIaGtSVEZuU0hKeE1FTm5XVVZCYkhCa2JXMUpTWGRWVUZFM1RFeFhOR3Q2WlhoY2JubFNiVGtyZFhac1kzRndTMmhhYlVSSVoyNTNNRkp2V0doV2VtdGlhM1JxUlhwSmQxZHlOSFJLUmtGUVVtbEVjbTF1T0VSRU4wMVBWelU0ZGxCblNWSmNibUZDTlRsTWFUUjRSbWh5U2tkclVVeDZSMkYzTmpsT1dGRm5NRU5GTDBOeWNqRmxjMWh3U214SU1WcGxlRVJaYVhGWVdqa3phVTVhYzJWMFVqSTFRMDVjYmpkWE9USXJMM05NUTB0TVdITjJWMHBrYmtGcWRqRXdQVnh1TFMwdExTMUZUa1FnVUZKSlZrRlVSU0JMUlZrdExTMHRMVnh1SWl3S0lDQWlZMnhwWlc1MFgyVnRZV2xzSWpvZ0ltZHJaUzF3Y205cVpXTjBRR0ZzZEhOamFHOXZiQzB5TXk1cFlXMHVaM05sY25acFkyVmhZMk52ZFc1MExtTnZiU0lzQ2lBZ0ltTnNhV1Z1ZEY5cFpDSTZJQ0l4TVRVeU9EWTROamt6TWpNeU56VXhNalExTURVaUxBb2dJQ0poZFhSb1gzVnlhU0k2SUNKb2RIUndjem92TDJGalkyOTFiblJ6TG1kdmIyZHNaUzVqYjIwdmJ5OXZZWFYwYURJdllYVjBhQ0lzQ2lBZ0luUnZhMlZ1WDNWeWFTSTZJQ0pvZEhSd2N6b3ZMMjloZFhSb01pNW5iMjluYkdWaGNHbHpMbU52YlM5MGIydGxiaUlzQ2lBZ0ltRjFkR2hmY0hKdmRtbGtaWEpmZURVd09WOWpaWEowWDNWeWJDSTZJQ0pvZEhSd2N6b3ZMM2QzZHk1bmIyOW5iR1ZoY0dsekxtTnZiUzl2WVhWMGFESXZkakV2WTJWeWRITWlMQW9nSUNKamJHbGxiblJmZURVd09WOWpaWEowWDNWeWJDSTZJQ0pvZEhSd2N6b3ZMM2QzZHk1bmIyOW5iR1ZoY0dsekxtTnZiUzl5YjJKdmRDOTJNUzl0WlhSaFpHRjBZUzk0TlRBNUwyZHJaUzF3Y205cVpXTjBKVFF3WVd4MGMyTm9iMjlzTFRJekxtbGhiUzVuYzJWeWRtbGpaV0ZqWTI5MWJuUXVZMjl0SWdwOSIKCQl9Cgl9Cn0=
# type: kubernetes.io/dockercfg

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: personal-blog
  labels:
    name: personal-blog
  namespace: blog
spec:
  replicas: 1
  selector:
    matchLabels:
      name: personal-blog
  template:
    metadata:
      labels:
        name: personal-blog
    spec:
      containers:
      - name: personal-blog
        image: gcr.io/altschool-23/personal-blog:latest
        env:
          - name: DATABASE_NAME
            value: micro_blog_development
          - name: DATABASE_PASSWORD
            value: shack
          - name: DATABASE_USER
            value: sammy
          - name: DATABASE_HOST
            value: "$(PERSONAL_BLOG_DB_SERVICE_SERVICE_HOST):$(PERSONAL_BLOG_DB_SERVICE_SERVICE_PORT)"
          - name: RAILS_ENV
            value: development
          - name: REDIS_HOST
            value:
        resources:
          limits:
            cpu: 500m
            memory: 500Mi
          requests:
            cpu: 100m
            memory: 300Mi
        ports:
          - containerPort: 3000
        securityContext:
          runAsNonRoot: true
          runAsUser: 10001
          capabilities:
            drop:
              - all
            add:
              - NET_BIND_SERVICE
          readOnlyRootFilesystem: true
      imagePullSecrets: 
      - name: gcr-json-key
      nodeSelector:
        beta.kubernetes.io/os: linux
---
apiVersion: v1
kind: Service
metadata: 
  labels:
    name: personal-blog
  name: personal-blog
  namespace: blog
spec:
  ports:
    - port: 80
      protocol: TCP
      targetPort: 3000
  selector:
    name: personal-blog
  sessionAffinity: None
  type: LoadBalancer
---
apiVersion: v1
kind: Namespace
metadata:
  name: hacker-company
---
apiVersion: v1
kind: Pod
metadata:
  name: frontend
  namespace: hacker-company
spec:
  containers:
  - name: nginx: stable
    image: nginx:latest
    ports:
    - containerPort: 80
    livenessProbe:
      exec:
        command: 
          - nginx -t
      initialDelaySeconds: 6
      periodSeconds: 60